const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api';

async function testUserCoursesAPI() {
  console.log('üß™ Test de l\'API des cours utilisateur...\n');

  try {
    // Test 1: Connexion utilisateur
    console.log('1Ô∏è‚É£ Test: Connexion utilisateur');
    const loginResponse = await axios.post(`${API_BASE_URL}/auth/login`, {
      email: 'momo@gmail.com',
      password: 'password123'
    });
    
    const token = loginResponse.data.token;
    console.log('   ‚úÖ Connexion r√©ussie');
    console.log(`   Utilisateur: ${loginResponse.data.user.firstName} ${loginResponse.data.user.lastName}\n`);

    // Test 2: R√©cup√©rer tous les cours de l'utilisateur
    console.log('2Ô∏è‚É£ Test: R√©cup√©ration de tous les cours');
    try {
      const response = await axios.get(`${API_BASE_URL}/users/me/courses`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('   ‚úÖ Cours r√©cup√©r√©s avec succ√®s');
      console.log(`   Nombre de cours: ${response.data.courses.length}`);
      console.log(`   Total disponible: ${response.data.total}`);
      console.log(`   Page: ${response.data.page}`);
      console.log(`   Pages totales: ${response.data.totalPages}`);
      
      if (response.data.courses.length > 0) {
        console.log('   Premier cours:', {
          title: response.data.courses[0].course.title,
          progress: response.data.courses[0].progress,
          completed: response.data.courses[0].completed
        });
      }
      
    } catch (error) {
      console.log('   ‚ùå Erreur lors de la r√©cup√©ration des cours:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Message: ${error.response?.data?.message}`);
    }
    console.log('');

    // Test 3: R√©cup√©rer les cours en cours
    console.log('3Ô∏è‚É£ Test: R√©cup√©ration des cours en cours');
    try {
      const response = await axios.get(`${API_BASE_URL}/users/me/courses/in-progress`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('   ‚úÖ Cours en cours r√©cup√©r√©s');
      console.log(`   Nombre de cours en cours: ${response.data.length}`);
      
      if (response.data.length > 0) {
        console.log('   Premier cours en cours:', {
          title: response.data[0].course.title,
          progress: response.data[0].progress
        });
      }
      
    } catch (error) {
      console.log('   ‚ùå Erreur lors de la r√©cup√©ration des cours en cours:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Message: ${error.response?.data?.message}`);
    }
    console.log('');

    // Test 4: R√©cup√©rer les cours termin√©s
    console.log('4Ô∏è‚É£ Test: R√©cup√©ration des cours termin√©s');
    try {
      const response = await axios.get(`${API_BASE_URL}/users/me/courses/completed`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('   ‚úÖ Cours termin√©s r√©cup√©r√©s');
      console.log(`   Nombre de cours termin√©s: ${response.data.length}`);
      
      if (response.data.length > 0) {
        console.log('   Premier cours termin√©:', {
          title: response.data[0].course.title,
          progress: response.data[0].progress,
          completedAt: response.data[0].completedAt
        });
      }
      
    } catch (error) {
      console.log('   ‚ùå Erreur lors de la r√©cup√©ration des cours termin√©s:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Message: ${error.response?.data?.message}`);
    }
    console.log('');

    // Test 5: R√©cup√©rer tous les cours inscrits
    console.log('5Ô∏è‚É£ Test: R√©cup√©ration de tous les cours inscrits');
    try {
      const response = await axios.get(`${API_BASE_URL}/users/me/courses/enrolled`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('   ‚úÖ Tous les cours inscrits r√©cup√©r√©s');
      console.log(`   Nombre total de cours inscrits: ${response.data.length}`);
      
      // Afficher un r√©sum√© des statuts
      const completed = response.data.filter(c => c.completed).length;
      const inProgress = response.data.filter(c => !c.completed && c.progress > 0).length;
      const notStarted = response.data.filter(c => !c.completed && c.progress === 0).length;
      
      console.log('   üìä R√©sum√© des statuts:');
      console.log(`      Termin√©s: ${completed}`);
      console.log(`      En cours: ${inProgress}`);
      console.log(`      Non commenc√©s: ${notStarted}`);
      
    } catch (error) {
      console.log('   ‚ùå Erreur lors de la r√©cup√©ration des cours inscrits:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Message: ${error.response?.data?.message}`);
    }
    console.log('');

    // Test 6: Mettre √† jour le progr√®s d'un cours
    console.log('6Ô∏è‚É£ Test: Mise √† jour du progr√®s d\'un cours');
    try {
      const courseId = '507f1f77bcf86cd799439011'; // ID du cours de test
      const newProgress = 85;
      
      const response = await axios.put(`${API_BASE_URL}/users/me/courses/${courseId}/progress`, {
        progress: newProgress
      }, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('   ‚úÖ Progr√®s mis √† jour avec succ√®s');
      console.log(`   Nouveau progr√®s: ${response.data.progress}%`);
      console.log(`   Termin√©: ${response.data.completed}`);
      
    } catch (error) {
      console.log('   ‚ùå Erreur lors de la mise √† jour du progr√®s:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Message: ${error.response?.data?.message}`);
    }
    console.log('');

    // Test 7: Marquer un cours comme termin√©
    console.log('7Ô∏è‚É£ Test: Marquage d\'un cours comme termin√©');
    try {
      const courseId = '507f1f77bcf86cd799439012'; // ID du cours de test
      
      const response = await axios.put(`${API_BASE_URL}/users/me/courses/${courseId}/complete`, {}, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });
      
      console.log('   ‚úÖ Cours marqu√© comme termin√©');
      console.log(`   Termin√©: ${response.data.completed}`);
      console.log(`   Date de fin: ${response.data.completedAt}`);
      
    } catch (error) {
      console.log('   ‚ùå Erreur lors du marquage du cours comme termin√©:');
      console.log(`   Status: ${error.response?.status}`);
      console.log(`   Message: ${error.response?.data?.message}`);
    }

    console.log('\nüéâ Tous les tests termin√©s!');
    console.log('üí° L\'API des cours utilisateur fonctionne correctement');

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
    if (error.response) {
      console.error('   D√©tails:', error.response.data);
    }
  }
}

// Ex√©cuter le test
testUserCoursesAPI();


